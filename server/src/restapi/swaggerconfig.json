{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "FamilyTree backend API",
        "description": "",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3080",
    "basePath": "/",
    "tags": [
        {
            "name": "Person",
            "description": "Represents a person"
        }
    ],
    "paths": {
        "/person/all": {
            "get": {
                "tags": [
                    "Person"
                ],
                "summary": "Gets all persons",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PersonsWithId"
                        }
                    }
                }
            }
        },
        "/marriage/all": {
            "get": {
                "tags": [
                    "Marriage"
                ],
                "summary": "Gets all marriages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Marriages"
                        }
                    }
                }
            }
        },
        "/marriage": {
            "post": {
                "tags": [
                    "Marriage"
                ],
                "summary": "Add a new marriage between two person",
                "parameters": [
                    {
                        "name": "marriage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MarriageWithId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Marriage"
                        }
                    }
                }
            }
        },
        "/marriage/{id}": {
            "delete": {
                "tags": [
                    "Marriage"
                ],
                "summary": "Delete exising marriage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Marriage Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Marriage"
                        }
                    }
                }
            }
        },
        "/person/{id}": {
            "get": {
                "tags": [
                    "Person"
                ],
                "summary": "Gets a person",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Person Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PersonWithId"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Person"
                ],
                "summary": "Update exising person",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Person Id"
                    },
                    {
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Person"
                ],
                "summary": "Delete exising person",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Person Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    }
                }
            }
        },
        "/person": {
            "post": {
                "tags": [
                    "Person"
                ],
                "summary": "Add a new person",
                "parameters": [
                    {
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Person"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/FTError"
                        }
                    }
                }
            }
        },
        "/person/{id}/avatar": {
            "post": {
                "tags": [
                    "Person"
                ],
                "summary": "Uploads avatar picture",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "Person Id"
                    },
                    {
                        "in": "formData",
                        "name": "AvatarPicture",
                        "type": "file",
                        "description": "The file to upload."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "avatarId": {
                                    "type": "string",
                                    "description": "UUID of the image. Also part of the url"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Marriage": {
            "properties": {
                "personId1": {
                    "type": "integer"
                },
                "personId2": {
                    "type": "integer"
                }
            }
        },
        "Marriages": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Marriage"
            }
        },
        "FTError": {
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Person": {
            "properties": {
                "forename": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "birthname": {
                    "type": "string"
                },
                "birthdate": {
                    "type": "string",
                    "format": "date"
                },
                "dayOfDeath": {
                    "type": "string",
                    "format": "date"
                },
                "placeOfDeath": {
                    "type": "string"
                },
                "placeOfBirth": {
                    "type": "string"
                },
                "fatherId": {
                    "type": "integer"
                },
                "motherId": {
                    "type": "integer"
                },
                "avatar": {
                    "type": "boolean"
                }
            }
        },
        "PersonWithId": {
            "allOf": [
                {
                    "$ref": "#/definitions/Person"
                },
                {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        }
                    }
                }
            ]
        },
        "Persons": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Person"
            }
        },
        "PersonsWithId": {
            "type": "array",
            "items": {
                "allOf": [
                    {
                        "$ref": "#/definitions/Person"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        }
    },
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ]
}